{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\admin\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { Input, Button, Card, message } from 'antd';\nimport { CookiesProvider, withCookies } from 'react-cookie';\nimport CryptoJS from 'crypto-js';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.Login = () => {\n      const cookies = this.props.cookies;\n      let userName = document.getElementById(\"user\").value,\n          passWord = document.getElementById(\"pass\").value;\n      userName = CryptoJS.enc.Utf8.parse(userName);\n      userName = CryptoJS.enc.Base64.stringify(userName);\n      passWord = CryptoJS.enc.Utf8.parse(passWord);\n      passWord = CryptoJS.enc.Base64.stringify(passWord);\n      cookies.set('user', userName);\n      cookies.set('pass', passWord);\n      fetch(\"http://183.88.219.85:7078/appoint/login.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: userName,\n          pass: passWord\n        })\n      }).then(res => res.json()).then(res => {\n        //console.log(res)\n        let stat = res.map(a => a.stat).toString();\n\n        if (stat === \"1\") {\n          this.setState({\n            user: res\n          });\n\n          this.props._onCheck(this.stat.user);\n        } else {\n          message.warning(\"usernameหรือpasswordไม่ถูกต้อง\");\n        }\n      });\n    };\n\n    this.state = {\n      user: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"LOGIN\"));\n  }\n\n}\n\nexport default withCookies(Login);","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\admin\\Login.jsx"],"names":["React","Component","Input","Button","Card","message","CookiesProvider","withCookies","CryptoJS","Login","constructor","cookies","props","userName","document","getElementById","value","passWord","enc","Utf8","parse","Base64","stringify","set","fetch","method","body","JSON","user","pass","then","res","json","stat","map","a","toString","setState","_onCheck","warning","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,OAA9B,QAA6C,MAA7C;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAC1BS,EAAAA,WAAW,GAAG;AACV;;AADU,SAMdD,KANc,GAMN,MAAM;AAAA,YACFE,OADE,GACU,KAAKC,KADf,CACFD,OADE;AAEV,UAAIE,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA/C;AAAA,UACIC,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAD/C;AAGAH,MAAAA,QAAQ,GAAGL,QAAQ,CAACU,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBP,QAAxB,CAAX;AACAA,MAAAA,QAAQ,GAAGL,QAAQ,CAACU,GAAT,CAAaG,MAAb,CAAoBC,SAApB,CAA8BT,QAA9B,CAAX;AACAI,MAAAA,QAAQ,GAAGT,QAAQ,CAACU,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBH,QAAxB,CAAX;AACAA,MAAAA,QAAQ,GAAGT,QAAQ,CAACU,GAAT,CAAaG,MAAb,CAAoBC,SAApB,CAA8BL,QAA9B,CAAX;AACAN,MAAAA,OAAO,CAACY,GAAR,CAAY,MAAZ,EAAoBV,QAApB;AACAF,MAAAA,OAAO,CAACY,GAAR,CAAY,MAAZ,EAAoBN,QAApB;AAEAO,MAAAA,KAAK,CAAC,6CAAD,EAAgD;AACjDC,QAAAA,MAAM,EAAE,MADyC;AAEjDC,QAAAA,IAAI,EAAEC,IAAI,CAACL,SAAL,CAAe;AACjBM,UAAAA,IAAI,EAAEf,QADW;AAEjBgB,UAAAA,IAAI,EAAEZ;AAFW,SAAf;AAF2C,OAAhD,CAAL,CAMGa,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOKF,IAPL,CAOUC,GAAG,IAAI;AACT;AACA,YAAIE,IAAI,GAAGF,GAAG,CAACG,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACF,IAAf,EAAqBG,QAArB,EAAX;;AACA,YAAIH,IAAI,KAAK,GAAb,EAAkB;AACd,eAAKI,QAAL,CAAc;AACVT,YAAAA,IAAI,EAAEG;AADI,WAAd;;AAGA,eAAKnB,KAAL,CAAW0B,QAAX,CAAoB,KAAKL,IAAL,CAAUL,IAA9B;AACH,SALD,MAKO;AACHvB,UAAAA,OAAO,CAACkC,OAAR,CAAgB,gCAAhB;AACH;AACJ,OAlBL;AAoBH,KAtCa;;AAEV,SAAKC,KAAL,GAAa;AACTZ,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAkCDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKhC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ;AAOH;;AAhDyB;;AAmD9B,eAAeF,WAAW,CAACE,KAAD,CAA1B","sourcesContent":["import React, { Component } from 'react'\r\nimport { Input, Button, Card, message } from 'antd'\r\nimport { CookiesProvider, withCookies } from 'react-cookie'\r\nimport CryptoJS from 'crypto-js'\r\nclass Login extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            user: []\r\n        }\r\n    }\r\n    Login = () => {\r\n        const { cookies } = this.props;\r\n        let userName = document.getElementById(\"user\").value,\r\n            passWord = document.getElementById(\"pass\").value\r\n\r\n        userName = CryptoJS.enc.Utf8.parse(userName)\r\n        userName = CryptoJS.enc.Base64.stringify(userName)\r\n        passWord = CryptoJS.enc.Utf8.parse(passWord)\r\n        passWord = CryptoJS.enc.Base64.stringify(passWord)\r\n        cookies.set('user', userName)\r\n        cookies.set('pass', passWord)\r\n\r\n        fetch(\"http://183.88.219.85:7078/appoint/login.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                user: userName,\r\n                pass: passWord\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                //console.log(res)\r\n                let stat = res.map(a => a.stat).toString()\r\n                if (stat === \"1\") {\r\n                    this.setState({\r\n                        user: res\r\n                    })\r\n                    this.props._onCheck(this.stat.user)\r\n                } else {\r\n                    message.warning(\"usernameหรือpasswordไม่ถูกต้อง\")\r\n                }\r\n            })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input id={\"user\"} />\r\n                <Input id={\"pass\"} />\r\n                <Button onClick={this.Login}>LOGIN</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(Login)"]},"metadata":{},"sourceType":"module"}