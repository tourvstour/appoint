{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\admin\\\\Monitor.jsx\";\nimport React, { Component } from 'react';\nimport Head from './Head';\nimport Login from './Login';\nimport MassageAdmin from '../Components/MassageAdmin';\nimport { CookiesProvider, withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\n\nclass Monitor extends Component {\n  constructor() {\n    super();\n\n    this.tour = () => {\n      let loginStat = this.props.login.map(a => a.typeLogin).toString();\n\n      if (loginStat === \"false\") {\n        this.setState({\n          page: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, React.createElement(Login, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }))\n        });\n      }\n    };\n\n    this.state = {\n      page: React.createElement(\"html\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"aaa\")\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CookiesProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), this.tour(), this.state.page));\n  }\n\n}\n\nconst loginStat = state => {\n  return {\n    login: state.loginStat\n  };\n};\n\nexport default connect(loginStat)(withCookies(Monitor));","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\admin\\Monitor.jsx"],"names":["React","Component","Head","Login","MassageAdmin","CookiesProvider","withCookies","connect","Monitor","constructor","tour","loginStat","props","login","map","a","typeLogin","toString","setState","page","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC5BQ,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,IAPc,GAOT,MAAK;AACN,UAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,SAA5B,EAAuCC,QAAvC,EAAhB;;AACA,UAAIN,SAAS,KAAK,OAAlB,EAA2B;AACvB,aAAKO,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL;AADI,SAAd;AAGH;AACJ,KAda;;AAEV,SAAKC,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,KAAb;AAGH;;AAWDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKX,IAAL,EAFL,EAGK,KAAKU,KAAL,CAAWD,IAHhB,CADJ,CADJ;AASH;;AA3B2B;;AA6BhC,MAAMR,SAAS,GAAGS,KAAK,IAAI;AACvB,SAAO;AACHP,IAAAA,KAAK,EAAEO,KAAK,CAACT;AADV,GAAP;AAGH,CAJD;;AAKA,eAAeJ,OAAO,CAACI,SAAD,CAAP,CAAmBL,WAAW,CAACE,OAAD,CAA9B,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Head from './Head'\r\nimport Login from './Login'\r\nimport MassageAdmin from '../Components/MassageAdmin'\r\nimport { CookiesProvider, withCookies } from 'react-cookie'\r\nimport { connect } from 'react-redux'\r\nclass Monitor extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            page: <html>aaa</html>\r\n        }\r\n    }\r\n\r\n    tour=()=> {\r\n        let loginStat = this.props.login.map(a => a.typeLogin).toString()\r\n        if (loginStat === \"false\") {\r\n            this.setState({\r\n                page: <div><Login /></div>\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CookiesProvider>\r\n                    <Head />\r\n                    {this.tour()}\r\n                    {this.state.page}\r\n                </CookiesProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst loginStat = state => {\r\n    return {\r\n        login: state.loginStat\r\n    }\r\n}\r\nexport default connect(loginStat)(withCookies(Monitor))"]},"metadata":{},"sourceType":"module"}