{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\admin\\\\Head.jsx\";\nimport React, { Component } from 'react';\nimport { Input, Button, Card, message } from 'antd';\nimport { CookiesProvider, withCookies } from 'react-cookie';\nimport Login from './Login';\nimport { connect } from 'react-redux';\n\nclass Head extends Component {\n  constructor() {\n    super();\n\n    this.logOut = () => {\n      const cookies = this.props.cookies;\n      cookies.remove('user');\n      cookies.remove('pass');\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const cookies = this.props.cookies; //console.log(cookie)\n\n    let userName = cookies.get('user'),\n        passWord = cookies.get('pass');\n\n    if (userName === undefined || passWord === undefined) {\n      let setLogin = new Promise((resolve, reject) => {\n        resolve();\n      });\n      setLogin.then(() => {\n        this.props.dispatch({\n          type: \"login\",\n          login: {\n            typeLogin: \"false\"\n          }\n        });\n      });\n    } else {\n      fetch(\"http://183.88.219.85:7078/appoint/login.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: userName,\n          pass: passWord\n        })\n      }).then(res => res.json()).then(res => {\n        //console.log(res)\n        let stat = res.map(a => a.stat).toString();\n\n        if (stat === \"1\") {\n          let setLogin = new Promise(resolve => {\n            resolve();\n          });\n          setLogin.then(() => {\n            this.props.dispatch({\n              type: \"login\",\n              logins: {\n                typeLogin: \"true\"\n              }\n            });\n          }); // this.props.propsLogin(this.state.user)\n        } else {\n          message.warning(\"usernameหรือpasswordไม่ถูกต้อง\");\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u0E23\\u0E30\\u0E1A\\u0E1A\\u0E19\\u0E31\\u0E14\\u0E2D\\u0E2D\\u0E19\\u0E44\\u0E25\\u0E19\\u0E4C\"), React.createElement(Button, {\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), console.log(this.props.login));\n  }\n\n}\n\nconst loginStat = state => {\n  return {\n    login: state.loginStat\n  };\n};\n\nexport default connect(loginStat)(withCookies(Head));","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\admin\\Head.jsx"],"names":["React","Component","Input","Button","Card","message","CookiesProvider","withCookies","Login","connect","Head","constructor","logOut","cookies","props","remove","state","componentDidMount","userName","get","passWord","undefined","setLogin","Promise","resolve","reject","then","dispatch","type","login","typeLogin","fetch","method","body","JSON","stringify","user","pass","res","json","stat","map","a","toString","logins","warning","render","console","log","loginStat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Input, Button, Card, message } from 'antd'\r\nimport { CookiesProvider, withCookies } from 'react-cookie'\r\nimport Login from './Login'\r\nimport { connect } from 'react-redux'\r\nclass Head extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { cookies } = this.props\r\n        //console.log(cookie)\r\n        let userName = cookies.get('user'),\r\n            passWord = cookies.get('pass')\r\n\r\n        if (userName === undefined || passWord === undefined) {\r\n            let setLogin = new Promise((resolve, reject) => {\r\n                resolve()\r\n            })\r\n            setLogin.then(() => {\r\n                this.props.dispatch({\r\n                    type: \"login\",\r\n                    login: { typeLogin: \"false\" }\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            fetch(\"http://183.88.219.85:7078/appoint/login.php\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    user: userName,\r\n                    pass: passWord\r\n                })\r\n            }).then(res => res.json())\r\n                .then(res => {\r\n                    //console.log(res)\r\n                    let stat = res.map(a => a.stat).toString()\r\n                    if (stat === \"1\") {\r\n                        let setLogin = new Promise((resolve) => {\r\n                            resolve()\r\n                        })\r\n                        setLogin.then(() => {\r\n                            this.props.dispatch({\r\n                                type: \"login\",\r\n                                logins: { typeLogin: \"true\" }\r\n                            })\r\n                        })\r\n\r\n                        // this.props.propsLogin(this.state.user)\r\n                    } else {\r\n                        message.warning(\"usernameหรือpasswordไม่ถูกต้อง\")\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    logOut = () => {\r\n        const { cookies } = this.props\r\n        cookies.remove('user')\r\n        cookies.remove('pass')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card >\r\n                    <h2>ระบบนัดออนไลน์</h2>\r\n                    <Button onClick={this.logOut}>Logout</Button>\r\n                </Card>\r\n                <Login />\r\n                {console.log(this.props.login)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst loginStat = state => {\r\n    return {\r\n        login: state.loginStat\r\n    }\r\n}\r\nexport default connect(loginStat)(withCookies(Head))"]},"metadata":{},"sourceType":"module"}