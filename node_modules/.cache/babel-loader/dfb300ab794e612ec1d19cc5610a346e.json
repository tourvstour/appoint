{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\admin\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { Input, Button, Card, message } from 'antd';\nimport { CookiesProvider, withCookies } from 'react-cookie';\nimport CryptoJS from 'crypto-js';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.Login = () => {\n      const cookies = this.props.cookies;\n      let userName = document.getElementById(\"user\").value,\n          passWord = document.getElementById(\"pass\").value;\n      userName = CryptoJS.enc.Utf8.parse(userName);\n      userName = CryptoJS.enc.Base64.stringify(userName);\n      passWord = CryptoJS.enc.Utf8.parse(passWord);\n      passWord = CryptoJS.enc.Base64.stringify(passWord);\n      cookies.set('user', userName);\n      cookies.set('pass', passWord);\n\n      if (userName === \"\" || passWord === \"\") {\n        message.warning('ระบุUser');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"LOGIN\"));\n  }\n\n}\n\nexport default withCookies(Login);","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\admin\\Login.jsx"],"names":["React","Component","Input","Button","Card","message","CookiesProvider","withCookies","CryptoJS","Login","cookies","props","userName","document","getElementById","value","passWord","enc","Utf8","parse","Base64","stringify","set","warning","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA6BC,OAA7B,QAA4C,MAA5C;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC1BQ,KAD0B,GAClB,MAAM;AAAA,YACFC,OADE,GACU,KAAKC,KADf,CACFD,OADE;AAEV,UAAIE,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA/C;AAAA,UACIC,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAD/C;AAGAH,MAAAA,QAAQ,GAAGJ,QAAQ,CAACS,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBP,QAAxB,CAAX;AACAA,MAAAA,QAAQ,GAAGJ,QAAQ,CAACS,GAAT,CAAaG,MAAb,CAAoBC,SAApB,CAA8BT,QAA9B,CAAX;AACAI,MAAAA,QAAQ,GAAGR,QAAQ,CAACS,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBH,QAAxB,CAAX;AACAA,MAAAA,QAAQ,GAAGR,QAAQ,CAACS,GAAT,CAAaG,MAAb,CAAoBC,SAApB,CAA8BL,QAA9B,CAAX;AACAN,MAAAA,OAAO,CAACY,GAAR,CAAY,MAAZ,EAAoBV,QAApB;AACAF,MAAAA,OAAO,CAACY,GAAR,CAAY,MAAZ,EAAoBN,QAApB;;AAEA,UAAGJ,QAAQ,KAAG,EAAX,IAAeI,QAAQ,KAAG,EAA7B,EAAgC;AAC5BX,QAAAA,OAAO,CAACkB,OAAR,CAAgB,UAAhB;AACH;AAEJ,KAjByB;AAAA;;AAmB1BC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKf,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ;AAOH;;AA3ByB;;AA8B9B,eAAeF,WAAW,CAACE,KAAD,CAA1B","sourcesContent":["import React, { Component } from 'react'\r\nimport { Input, Button, Card,message } from 'antd'\r\nimport { CookiesProvider, withCookies } from 'react-cookie'\r\nimport CryptoJS from 'crypto-js'\r\nclass Login extends Component {\r\n    Login = () => {\r\n        const { cookies } = this.props;\r\n        let userName = document.getElementById(\"user\").value,\r\n            passWord = document.getElementById(\"pass\").value\r\n\r\n        userName = CryptoJS.enc.Utf8.parse(userName)\r\n        userName = CryptoJS.enc.Base64.stringify(userName)\r\n        passWord = CryptoJS.enc.Utf8.parse(passWord)\r\n        passWord = CryptoJS.enc.Base64.stringify(passWord)\r\n        cookies.set('user', userName)\r\n        cookies.set('pass', passWord)\r\n\r\n        if(userName===\"\"||passWord===\"\"){\r\n            message.warning('ระบุUser')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input id={\"user\"} />\r\n                <Input id={\"pass\"} />\r\n                <Button onClick={this.Login}>LOGIN</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(Login)"]},"metadata":{},"sourceType":"module"}