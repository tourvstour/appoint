{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\Components\\\\MassageAdmin.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Modal, Select, Input, message } from 'antd';\nimport '../Style/Tables.css';\nimport { reject } from 'q';\nconst Option = Select.Option;\nconst Search = Input.Search;\n\nclass MassageAdmin extends Component {\n  constructor() {\n    super();\n\n    this.seletTime = e => {\n      // console.log(e)\n      let type = e.map(a => a.stat).toString();\n      this.setState({\n        timeSelect: e\n      }); // console.log(type)\n\n      switch (type) {\n        case \"true\":\n          this.setState({\n            modalEdit: true\n          });\n          break;\n\n        case \"false\":\n          this.setState({\n            modalAdd: true\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.searchHn = e => {\n      let hn = e;\n      fetch(\"http://183.88.219.85:7078/appoint/person_hn.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          hn: hn\n        })\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          person: res\n        });\n      });\n    };\n\n    this.selectService = e => {\n      this.setState({\n        selectService: e\n      });\n    };\n\n    this.waitingAppoint = () => {\n      let person = this.state.person,\n          service = [{\n        hn: this.state.person.map(a => a.patient_hn).toString(),\n        serviceDate: this.state.timeSelect.map(a => a.date).toString(),\n        setviceTime: this.state.timeSelect.map(a => a.timeId).toString(),\n        servicePlans: this.state.person.map(a => a.contract_plans_description).toString(),\n        servicePoint: this.state.timeSelect.map(a => a.pointId).toString(),\n        serviceName: this.state.selectService.toString(),\n        docId: this.state.timeSelect.map(a => a.docId).toString()\n      }];\n      service.forEach(service => {\n        if (service.hn === \"\" || service.serviceDate === \"\" || service.setviceTime === \"\" || service.servicePlans === \"\" || service.servicePoint === \"\" || service.serviceName === \"\" || service.docId === \"\" || person === []) {\n          message.error(\"กรุณาทำรายการให้ครบถ้วน\");\n        } else {\n          fetch(\"http://183.88.219.85:7078/appoint/appointing_massage.php\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              person: person,\n              service: service\n            })\n          });\n        }\n      });\n    };\n\n    this.state = {\n      selectService: \"\",\n      person: [],\n      massageService: [],\n      timeSelect: [],\n      massageData: [],\n      modalAdd: false,\n      modalEdit: false\n    };\n  }\n\n  componentDidMount() {\n    let date = new Date();\n    date = \"\".concat(date.getFullYear(), \"-\").concat((\"0\" + (date.getMonth() + 1)).slice(-2), \"-\").concat((\"0\" + date.getDate()).slice(-2)); // console.log(date)\n\n    fetch(\"http://183.88.219.85:7078/appoint/service.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        point: 2\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        massageService: res\n      });\n    });\n    fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        date: date\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        massageData: res\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"100%\",\n        overflowX: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"Table-Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.massageData.map(a => React.createElement(\"tr\", {\n      className: \"Table-tr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"Table-collapse Table-Name Table-td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, a.doctor_name_prefex, \" \", a.doctor_name_fname, \" \", a.doctor_name_lname), a.service.map(b => React.createElement(\"td\", {\n      className: \"Table-collapse Table-Time Table-td\",\n      onClick: () => this.seletTime([{\n        docId: a.doctor_name_id,\n        pointId: a.point_id,\n        timeId: b.timeId,\n        stat: b.dis,\n        serviceId: b.serviceId,\n        docName: a.doctor_name_prefex + ' ' + a.doctor_name_fname + ' ' + a.doctor_name_lname,\n        timeName: b.time,\n        date: b.serviceDate\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, b.time), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, b.name))))))), React.createElement(Modal, {\n      title: \"ทำรายการนัด\",\n      name: \"Add\",\n      visible: this.state.modalAdd,\n      onCancel: () => this.setState({\n        modalAdd: false\n      }),\n      onOk: this.waitingAppoint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.timeSelect.map(a => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E2B\\u0E49\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23 \", a.docName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48 \", a.date), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"\\u0E40\\u0E27\\u0E25\\u0E32 \", a.timeName)), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\\u0E1C\\u0E39\\u0E49\\u0E1B\\u0E48\\u0E27\\u0E22\"), React.createElement(Search, {\n      id: \"hn\",\n      placeholder: \"ค้นหาผู้ป่วยจากHN\",\n      enterButton: \"ค้นหา\",\n      onSearch: this.searchHn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.person.map(b => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"HN: \", b.patient_hn), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\u0E1C\\u0E39\\u0E49\\u0E23\\u0E31\\u0E1A\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23 \", b.patient_prefix_description, \" \", b.patient_firstname, \" \", b.patient_lastname), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\u0E2D\\u0E32\\u0E22\\u0E38 \", b.age), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\u0E2A\\u0E34\\u0E17\\u0E18\\u0E34\\u0E4C \", b.contract_plans_description)))), React.createElement(Select, {\n      style: {\n        width: \"100%\"\n      },\n      placeholder: \"ระบุบริการ\",\n      onSelect: this.selectService,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.massageService.map(a => React.createElement(Option, {\n      value: a.service_name_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, a.service_name_order))))))), React.createElement(Modal, {\n      title: \"แก้ไข\",\n      name: \"Edit\",\n      visible: this.state.modalEdit,\n      onCancel: () => this.setState({\n        modalEdit: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MassageAdmin;","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\Components\\MassageAdmin.jsx"],"names":["React","Component","Card","Modal","Select","Input","message","reject","Option","Search","MassageAdmin","constructor","seletTime","e","type","map","a","stat","toString","setState","timeSelect","modalEdit","modalAdd","searchHn","hn","fetch","method","body","JSON","stringify","then","res","json","person","selectService","waitingAppoint","state","service","patient_hn","serviceDate","date","setviceTime","timeId","servicePlans","contract_plans_description","servicePoint","pointId","serviceName","docId","forEach","error","massageService","massageData","componentDidMount","Date","getFullYear","getMonth","slice","getDate","point","render","width","overflowX","doctor_name_prefex","doctor_name_fname","doctor_name_lname","b","doctor_name_id","point_id","dis","serviceId","docName","timeName","time","name","patient_prefix_description","patient_firstname","patient_lastname","age","service_name_id","service_name_order"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Modal, Select, Input, message } from 'antd'\r\nimport '../Style/Tables.css'\r\nimport { reject } from 'q';\r\nconst { Option } = Select\r\nconst { Search } = Input\r\nclass MassageAdmin extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            selectService: \"\",\r\n            person: [],\r\n            massageService: [],\r\n            timeSelect: [],\r\n            massageData: [],\r\n            modalAdd: false,\r\n            modalEdit: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let date = new Date()\r\n        date = `${date.getFullYear()}-${(\"0\" + (date.getMonth() + 1)).slice(-2)}-${(\"0\" + (date.getDate())).slice(-2)}`\r\n        // console.log(date)\r\n        fetch(\"http://183.88.219.85:7078/appoint/service.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                point: 2\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageService: res\r\n                })\r\n            })\r\n        fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                date: date\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageData: res\r\n                })\r\n            })\r\n    }\r\n    seletTime = (e) => {\r\n        // console.log(e)\r\n        let type = e.map(a => a.stat).toString()\r\n        this.setState({\r\n            timeSelect: e\r\n        })\r\n        // console.log(type)\r\n\r\n        switch (type) {\r\n            case \"true\":\r\n                this.setState({\r\n                    modalEdit: true\r\n                })\r\n                break;\r\n            case \"false\":\r\n                this.setState({\r\n                    modalAdd: true\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    searchHn = (e) => {\r\n        let hn = e\r\n        fetch(\"http://183.88.219.85:7078/appoint/person_hn.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                hn: hn\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    person: res\r\n                })\r\n            })\r\n    }\r\n\r\n    selectService = (e) => {\r\n        this.setState({\r\n            selectService: e\r\n        })\r\n    }\r\n\r\n    waitingAppoint = () => {\r\n        let person = this.state.person,\r\n            service = [{\r\n                hn: this.state.person.map(a => a.patient_hn).toString(),\r\n                serviceDate: this.state.timeSelect.map(a => a.date).toString(),\r\n                setviceTime: this.state.timeSelect.map(a => a.timeId).toString(),\r\n                servicePlans: this.state.person.map(a => a.contract_plans_description).toString(),\r\n                servicePoint: this.state.timeSelect.map(a => a.pointId).toString(),\r\n                serviceName: this.state.selectService.toString(),\r\n                docId: this.state.timeSelect.map(a => a.docId).toString()\r\n            }]\r\n\r\n        service.forEach(service => {\r\n            if (service.hn === \"\" || service.serviceDate === \"\" || service.setviceTime === \"\" || service.servicePlans === \"\" || service.servicePoint === \"\" || service.serviceName === \"\" || service.docId === \"\" || person === []) {\r\n                message.error(\"กรุณาทำรายการให้ครบถ้วน\")\r\n            } else {\r\n                fetch(\"http://183.88.219.85:7078/appoint/appointing_massage.php\",{\r\n                    method:\"POST\",\r\n                    body:JSON.stringify({\r\n                        person:person,\r\n                        service:service\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Card style={{ width: \"100%\", overflowX: \"auto\" }}>\r\n                    <table className=\"Table-Main\">\r\n                        {this.state.massageData.map(a => (\r\n                            <tr className=\"Table-tr\">\r\n                                <td className=\"Table-collapse Table-Name Table-td\">{a.doctor_name_prefex} {a.doctor_name_fname} {a.doctor_name_lname}</td>\r\n                                {a.service.map(b => (\r\n                                    <td className=\"Table-collapse Table-Time Table-td\" onClick={() => this.seletTime([{\r\n                                        docId: a.doctor_name_id, pointId: a.point_id, timeId: b.timeId, stat: b.dis, serviceId: b.serviceId, docName: a.doctor_name_prefex + ' ' + a.doctor_name_fname + ' ' + a.doctor_name_lname, timeName: b.time, date: b.serviceDate\r\n                                    }])}>\r\n                                        <p>{b.time}</p>\r\n                                        <p>{b.name}</p>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </table>\r\n                </Card>\r\n                {/*Modal Add*/}\r\n                <Modal\r\n                    title={\"ทำรายการนัด\"}\r\n                    name={\"Add\"}\r\n                    visible={this.state.modalAdd}\r\n                    onCancel={() => this.setState({ modalAdd: false })}\r\n                    onOk={this.waitingAppoint}\r\n                >\r\n                    {this.state.timeSelect.map(a => (\r\n                        <div>\r\n                            <Card>\r\n                                <h3>ผู้ให้บริการ {a.docName}</h3>\r\n                                <h3>วันที่ {a.date}</h3>\r\n                                <h3>เวลา {a.timeName}</h3>\r\n                            </Card>\r\n\r\n                            <Card>\r\n                                <p>ค้นหาผู้ป่วย</p>\r\n                                <Search id={\"hn\"} placeholder={\"ค้นหาผู้ป่วยจากHN\"} enterButton={\"ค้นหา\"} onSearch={this.searchHn} />\r\n                                <Card>\r\n                                    {this.state.person.map(b => (\r\n                                        <div>\r\n                                            <h3>HN: {b.patient_hn}</h3>\r\n                                            <h3>ผู้รับบริการ {b.patient_prefix_description} {b.patient_firstname} {b.patient_lastname}</h3>\r\n                                            <h3>อายุ {b.age}</h3>\r\n                                            <h3>สิทธิ์ {b.contract_plans_description}</h3>\r\n                                        </div>\r\n                                    ))}\r\n                                </Card>\r\n                                <Select style={{ width: \"100%\" }}\r\n                                    placeholder={\"ระบุบริการ\"}\r\n                                    onSelect={this.selectService}\r\n                                >\r\n                                    {this.state.massageService.map(a => (\r\n                                        <Option value={a.service_name_id}>{a.service_name_order}</Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Card>\r\n                        </div>\r\n                    ))}\r\n                </Modal>\r\n                {/*Modal Add*/}\r\n\r\n                {/*Modal Edit*/}\r\n                <Modal\r\n                    title={\"แก้ไข\"}\r\n                    name={\"Edit\"}\r\n                    visible={this.state.modalEdit}\r\n                    onCancel={() => this.setState({ modalEdit: false })}\r\n                >\r\n\r\n                </Modal>\r\n                {/*Modal Edit*/}\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default MassageAdmin"]},"metadata":{},"sourceType":"module"}