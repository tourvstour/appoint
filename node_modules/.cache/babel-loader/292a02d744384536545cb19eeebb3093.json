{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\Components\\\\MassageAdmin.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Modal, Select, Input, message, DatePicker } from 'antd';\nimport '../Style/Tables.css';\nimport { reject } from 'q';\nconst Option = Select.Option;\nconst Search = Input.Search;\n\nclass MassageAdmin extends Component {\n  constructor() {\n    super();\n\n    this.selectDate = (a, b) => {\n      fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          date: b\n        })\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          massageData: res\n        });\n      });\n    };\n\n    this.seletTime = e => {\n      // console.log(e)\n      let type = e.map(a => a.stat).toString();\n      this.setState({\n        timeSelect: e\n      }); // console.log(type)\n\n      switch (type) {\n        case \"true\":\n          this.setState({\n            modalEdit: true\n          });\n          break;\n\n        case \"false\":\n          this.setState({\n            modalAdd: true\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.searchHn = e => {\n      let hn = e;\n      fetch(\"http://183.88.219.85:7078/appoint/person_hn.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          hn: hn\n        })\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          person: res\n        });\n      });\n    };\n\n    this.selectService = e => {\n      this.setState({\n        selectService: e\n      });\n    };\n\n    this.waitingAppoint = () => {\n      let person = this.state.person,\n          service = [{\n        hn: this.state.person.map(a => a.patient_hn).toString(),\n        serviceDate: this.state.timeSelect.map(a => a.date).toString(),\n        serviceTime: this.state.timeSelect.map(a => a.timeId).toString(),\n        servicePlans: this.state.person.map(a => a.contract_plans_description).toString(),\n        servicePoint: this.state.timeSelect.map(a => a.pointId).toString(),\n        serviceName: this.state.selectService.toString(),\n        docId: this.state.timeSelect.map(a => a.docId).toString(),\n        phone: document.getElementById('phone').value\n      }];\n      service.forEach(service => {\n        if (service.hn === \"\" || service.serviceDate === \"\" || service.serviceTime === \"\" || service.servicePlans === \"\" || service.servicePoint === \"\" || service.serviceName === \"\" || service.docId === \"\" || person === [] || service.phone === \"\") {\n          message.error(\"กรุณาทำรายการให้ครบถ้วน\");\n        } else {\n          fetch(\"http://183.88.219.85:7078/appoint/appointing_massage.php\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              person: person,\n              service: service\n            })\n          });\n        }\n      });\n    };\n\n    this.state = {\n      selectService: \"\",\n      person: [],\n      massageService: [],\n      timeSelect: [],\n      massageData: [],\n      modalAdd: false,\n      modalEdit: false\n    };\n  }\n\n  componentDidMount() {\n    let date = new Date();\n    date = \"\".concat(date.getFullYear(), \"-\").concat((\"0\" + (date.getMonth() + 1)).slice(-2), \"-\").concat((\"0\" + date.getDate()).slice(-2)); // console.log(date)\n\n    fetch(\"http://183.88.219.85:7078/appoint/service.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        point: 2\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        massageService: res\n      });\n    });\n    fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        date: date\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        massageData: res\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      onChange: this.selectDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Card, {\n      style: {\n        width: \"100%\",\n        overflowX: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"Table-Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.massageData.map(a => React.createElement(\"tr\", {\n      className: \"Table-tr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"Table-collapse Table-Name Table-td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, a.doctor_name_prefex, \" \", a.doctor_name_fname, \" \", a.doctor_name_lname), a.service.map(b => React.createElement(\"td\", {\n      className: \"Table-collapse Table-Time Table-td\",\n      onClick: () => this.seletTime([{\n        docId: a.doctor_name_id,\n        pointId: a.point_id,\n        timeId: b.timeId,\n        stat: b.dis,\n        serviceId: b.serviceId,\n        docName: a.doctor_name_prefex + ' ' + a.doctor_name_fname + ' ' + a.doctor_name_lname,\n        timeName: b.time,\n        date: b.serviceDate\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, b.time), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, b.name))))))), React.createElement(Modal, {\n      title: \"ทำรายการนัด\",\n      name: \"Add\",\n      visible: this.state.modalAdd,\n      onCancel: () => this.setState({\n        modalAdd: false\n      }),\n      onOk: this.waitingAppoint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.timeSelect.map(a => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E2B\\u0E49\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23 \", a.docName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48 \", a.date), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"\\u0E40\\u0E27\\u0E25\\u0E32 \", a.timeName)), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\\u0E1C\\u0E39\\u0E49\\u0E1B\\u0E48\\u0E27\\u0E22\"), React.createElement(Search, {\n      id: \"hn\",\n      placeholder: \"ค้นหาผู้ป่วยจากHN\",\n      enterButton: \"ค้นหา\",\n      onSearch: this.searchHn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.person.map(b => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"HN: \", b.patient_hn), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"\\u0E1C\\u0E39\\u0E49\\u0E23\\u0E31\\u0E1A\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23 \", b.patient_prefix_description, \" \", b.patient_firstname, \" \", b.patient_lastname), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"\\u0E2D\\u0E32\\u0E22\\u0E38 \", b.age), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"\\u0E2A\\u0E34\\u0E17\\u0E18\\u0E34\\u0E4C \", b.contract_plans_description)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(Select, {\n      style: {\n        width: \"100%\"\n      },\n      placeholder: \"ระบุบริการ\",\n      onSelect: this.selectService,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.massageService.map(a => React.createElement(Option, {\n      value: a.service_name_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, a.service_name_order))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Input, {\n      placeholder: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E15\\u0E34\\u0E14\\u0E15\\u0E48\\u0E2D\",\n      id: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))))), React.createElement(Modal, {\n      title: \"แก้ไข\",\n      name: \"Edit\",\n      visible: this.state.modalEdit,\n      onCancel: () => this.setState({\n        modalEdit: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MassageAdmin;","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\Components\\MassageAdmin.jsx"],"names":["React","Component","Card","Modal","Select","Input","message","DatePicker","reject","Option","Search","MassageAdmin","constructor","selectDate","a","b","fetch","method","body","JSON","stringify","date","then","res","json","setState","massageData","seletTime","e","type","map","stat","toString","timeSelect","modalEdit","modalAdd","searchHn","hn","person","selectService","waitingAppoint","state","service","patient_hn","serviceDate","serviceTime","timeId","servicePlans","contract_plans_description","servicePoint","pointId","serviceName","docId","phone","document","getElementById","value","forEach","error","massageService","componentDidMount","Date","getFullYear","getMonth","slice","getDate","point","render","width","overflowX","doctor_name_prefex","doctor_name_fname","doctor_name_lname","doctor_name_id","point_id","dis","serviceId","docName","timeName","time","name","patient_prefix_description","patient_firstname","patient_lastname","age","service_name_id","service_name_order"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Modal, Select, Input, message, DatePicker } from 'antd'\r\nimport '../Style/Tables.css'\r\nimport { reject } from 'q';\r\nconst { Option } = Select\r\nconst { Search } = Input\r\nclass MassageAdmin extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            selectService: \"\",\r\n            person: [],\r\n            massageService: [],\r\n            timeSelect: [],\r\n            massageData: [],\r\n            modalAdd: false,\r\n            modalEdit: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let date = new Date()\r\n        date = `${date.getFullYear()}-${(\"0\" + (date.getMonth() + 1)).slice(-2)}-${(\"0\" + (date.getDate())).slice(-2)}`\r\n        // console.log(date)\r\n        fetch(\"http://183.88.219.85:7078/appoint/service.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                point: 2\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageService: res\r\n                })\r\n            })\r\n        fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                date: date\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageData: res\r\n                })\r\n            })\r\n    }\r\n\r\n    selectDate = (a, b) => {\r\n        fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                date: b\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageData: res\r\n                })\r\n            })\r\n    }\r\n\r\n    seletTime = (e) => {\r\n        // console.log(e)\r\n        let type = e.map(a => a.stat).toString()\r\n        this.setState({\r\n            timeSelect: e\r\n        })\r\n        // console.log(type)\r\n\r\n        switch (type) {\r\n            case \"true\":\r\n                this.setState({\r\n                    modalEdit: true\r\n                })\r\n                break;\r\n            case \"false\":\r\n                this.setState({\r\n                    modalAdd: true\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    searchHn = (e) => {\r\n        let hn = e\r\n        fetch(\"http://183.88.219.85:7078/appoint/person_hn.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                hn: hn\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    person: res\r\n                })\r\n            })\r\n    }\r\n\r\n    selectService = (e) => {\r\n        this.setState({\r\n            selectService: e\r\n        })\r\n    }\r\n\r\n    waitingAppoint = () => {\r\n        let person = this.state.person,\r\n            service = [{\r\n                hn: this.state.person.map(a => a.patient_hn).toString(),\r\n                serviceDate: this.state.timeSelect.map(a => a.date).toString(),\r\n                serviceTime: this.state.timeSelect.map(a => a.timeId).toString(),\r\n                servicePlans: this.state.person.map(a => a.contract_plans_description).toString(),\r\n                servicePoint: this.state.timeSelect.map(a => a.pointId).toString(),\r\n                serviceName: this.state.selectService.toString(),\r\n                docId: this.state.timeSelect.map(a => a.docId).toString(),\r\n                phone: document.getElementById('phone').value\r\n            }]\r\n\r\n        service.forEach(service => {\r\n            if (service.hn === \"\" || service.serviceDate === \"\" || service.serviceTime === \"\" || service.servicePlans === \"\" || service.servicePoint === \"\" || service.serviceName === \"\" || service.docId === \"\" || person === [] || service.phone === \"\") {\r\n                message.error(\"กรุณาทำรายการให้ครบถ้วน\")\r\n            } else {\r\n                fetch(\"http://183.88.219.85:7078/appoint/appointing_massage.php\", {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        person: person,\r\n                        service: service\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Card>\r\n                    <DatePicker\r\n                        onChange={this.selectDate}\r\n                    />\r\n                </Card>\r\n                <Card style={{ width: \"100%\", overflowX: \"auto\" }}>\r\n                    <table className=\"Table-Main\">\r\n                        {this.state.massageData.map(a => (\r\n                            <tr className=\"Table-tr\">\r\n                                <td className=\"Table-collapse Table-Name Table-td\">{a.doctor_name_prefex} {a.doctor_name_fname} {a.doctor_name_lname}</td>\r\n                                {a.service.map(b => (\r\n                                    <td className=\"Table-collapse Table-Time Table-td\" onClick={() => this.seletTime([{\r\n                                        docId: a.doctor_name_id, pointId: a.point_id, timeId: b.timeId, stat: b.dis, serviceId: b.serviceId, docName: a.doctor_name_prefex + ' ' + a.doctor_name_fname + ' ' + a.doctor_name_lname, timeName: b.time, date: b.serviceDate\r\n                                    }])}>\r\n                                        <p>{b.time}</p>\r\n                                        <p>{b.name}</p>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </table>\r\n                </Card>\r\n                {/*Modal Add*/}\r\n                <Modal\r\n                    title={\"ทำรายการนัด\"}\r\n                    name={\"Add\"}\r\n                    visible={this.state.modalAdd}\r\n                    onCancel={() => this.setState({ modalAdd: false })}\r\n                    onOk={this.waitingAppoint}\r\n                >\r\n                    {this.state.timeSelect.map(a => (\r\n                        <div>\r\n                            <Card>\r\n                                <h3>ผู้ให้บริการ {a.docName}</h3>\r\n                                <h3>วันที่ {a.date}</h3>\r\n                                <h3>เวลา {a.timeName}</h3>\r\n                            </Card>\r\n\r\n                            <Card>\r\n                                <p>ค้นหาผู้ป่วย</p>\r\n                                <Search id={\"hn\"} placeholder={\"ค้นหาผู้ป่วยจากHN\"} enterButton={\"ค้นหา\"} onSearch={this.searchHn} />\r\n                                <Card>\r\n                                    {this.state.person.map(b => (\r\n                                        <div>\r\n                                            <h3>HN: {b.patient_hn}</h3>\r\n                                            <h3>ผู้รับบริการ {b.patient_prefix_description} {b.patient_firstname} {b.patient_lastname}</h3>\r\n                                            <h3>อายุ {b.age}</h3>\r\n                                            <h3>สิทธิ์ {b.contract_plans_description}</h3>\r\n                                        </div>\r\n                                    ))}\r\n                                </Card>\r\n                                <br />\r\n                                <Select style={{ width: \"100%\" }}\r\n                                    placeholder={\"ระบุบริการ\"}\r\n                                    onSelect={this.selectService}\r\n                                >\r\n                                    {this.state.massageService.map(a => (\r\n                                        <Option value={a.service_name_id}>{a.service_name_order}</Option>\r\n                                    ))}\r\n                                </Select>\r\n                                <br />\r\n                                <br />\r\n                                <Input placeholder=\"เบอร์ติดต่อ\" id=\"phone\" />\r\n                            </Card>\r\n                        </div>\r\n                    ))}\r\n                </Modal>\r\n                {/*Modal Add*/}\r\n\r\n                {/*Modal Edit*/}\r\n                <Modal\r\n                    title={\"แก้ไข\"}\r\n                    name={\"Edit\"}\r\n                    visible={this.state.modalEdit}\r\n                    onCancel={() => this.setState({ modalEdit: false })}\r\n                >\r\n\r\n                </Modal>\r\n                {/*Modal Edit*/}\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default MassageAdmin"]},"metadata":{},"sourceType":"module"}