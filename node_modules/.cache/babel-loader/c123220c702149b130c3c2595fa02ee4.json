{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\Components\\\\MassageAdmin.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Modal, Select, Input } from 'antd';\nimport '../Style/Tables.css';\nconst Option = Select.Option;\nconst Search = Input.Search;\n\nclass MassageAdmin extends Component {\n  constructor() {\n    super();\n\n    this.seletTime = e => {\n      console.log(e);\n      let type = e.map(a => a.stat).toString();\n      this.setState({\n        timeSelect: e\n      });\n      console.log(type);\n\n      switch (type) {\n        case \"true\":\n          this.setState({\n            modalEdit: true\n          });\n          break;\n\n        case \"false\":\n          this.setState({\n            modalAdd: true\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      massageService: [],\n      timeSelect: [],\n      massageData: [],\n      modalAdd: false,\n      modalEdit: false\n    };\n  }\n\n  componentDidMount() {\n    let date = new Date();\n    date = \"\".concat(date.getFullYear(), \"-\").concat((\"0\" + (date.getMonth() + 1)).slice(-2), \"-\").concat((\"0\" + date.getDate()).slice(-2));\n    console.log(date);\n    fetch(\"http://183.88.219.85:7078/appoint/service.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        point: 2\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        massageService: res\n      });\n    });\n    fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        date: date\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        massageData: res\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"100%\",\n        overflowX: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"Table-Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.massageData.map(a => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"Table-collapse Table-Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, a.doctor_name_prefex, \" \", a.doctor_name_fname, \" \", a.doctor_name_lname), a.service.map(b => React.createElement(\"td\", {\n      className: \"Table-collapse Table-Time\",\n      onClick: () => this.seletTime([{\n        docId: a.doctor_name_id,\n        pointId: a.point_id,\n        timeId: b.timeId,\n        stat: b.dis,\n        serviceId: b.serviceId,\n        docName: a.doctor_name_prefex + ' ' + a.doctor_name_fname + ' ' + a.doctor_name_lname,\n        timeName: b.time,\n        date: b.serviceDate\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, b.time), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, b.name))))))), React.createElement(Modal, {\n      title: \"\\u0E17\\u0E33\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E19\\u0E31\\u0E14\",\n      name: \"Add\",\n      visible: this.state.modalAdd,\n      onCancel: () => this.setState({\n        modalAdd: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.timeSelect.map(a => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E2B\\u0E49\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23 \", a.docName), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48 \", a.date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\u0E40\\u0E27\\u0E25\\u0E32 \", a.timeName))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\\u0E1C\\u0E39\\u0E49\\u0E1B\\u0E48\\u0E27\\u0E22\"), React.createElement(Search, {\n      id: \"hn\",\n      enterButton: \"hhh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"aa\")))), React.createElement(Modal, {\n      title: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\",\n      name: \"Edit\",\n      visible: this.state.modalEdit,\n      onCancel: () => this.setState({\n        modalEdit: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MassageAdmin;","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\Components\\MassageAdmin.jsx"],"names":["React","Component","Card","Modal","Select","Input","Option","Search","MassageAdmin","constructor","seletTime","e","console","log","type","map","a","stat","toString","setState","timeSelect","modalEdit","modalAdd","state","massageService","massageData","componentDidMount","date","Date","getFullYear","getMonth","slice","getDate","fetch","method","body","JSON","stringify","point","then","res","json","render","width","overflowX","doctor_name_prefex","doctor_name_fname","doctor_name_lname","service","b","docId","doctor_name_id","pointId","point_id","timeId","dis","serviceId","docName","timeName","time","serviceDate","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Modal, Select, Input } from 'antd'\r\nimport '../Style/Tables.css'\r\nconst { Option } = Select\r\nconst { Search } = Input\r\nclass MassageAdmin extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            massageService: [],\r\n            timeSelect: [],\r\n            massageData: [],\r\n            modalAdd: false,\r\n            modalEdit: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let date = new Date()\r\n        date = `${date.getFullYear()}-${(\"0\" + (date.getMonth() + 1)).slice(-2)}-${(\"0\" + (date.getDate())).slice(-2)}`\r\n        console.log(date)\r\n        fetch(\"http://183.88.219.85:7078/appoint/service.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                point: 2\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageService: res\r\n                })\r\n            })\r\n        fetch(\"http://183.88.219.85:7078/appoint/massage_table.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                date: date\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    massageData: res\r\n                })\r\n            })\r\n    }\r\n    seletTime = (e) => {\r\n        console.log(e)\r\n        let type = e.map(a => a.stat).toString()\r\n        this.setState({\r\n            timeSelect: e\r\n        })\r\n        console.log(type)\r\n\r\n        switch (type) {\r\n            case \"true\":\r\n                this.setState({\r\n                    modalEdit: true\r\n                })\r\n                break;\r\n            case \"false\":\r\n                this.setState({\r\n                    modalAdd: true\r\n                })\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Card style={{ width: \"100%\", overflowX: \"auto\" }}>\r\n                    <table className=\"Table-Main\">\r\n                        {this.state.massageData.map(a => (\r\n                            <tr>\r\n                                <td className=\"Table-collapse Table-Name\">{a.doctor_name_prefex} {a.doctor_name_fname} {a.doctor_name_lname}</td>\r\n                                {a.service.map(b => (\r\n                                    <td className=\"Table-collapse Table-Time\" onClick={() => this.seletTime([{\r\n                                        docId: a.doctor_name_id, pointId: a.point_id, timeId: b.timeId, stat: b.dis, serviceId: b.serviceId, docName: a.doctor_name_prefex + ' ' + a.doctor_name_fname + ' ' + a.doctor_name_lname, timeName: b.time, date: b.serviceDate\r\n                                    }])}>\r\n                                        <p>{b.time}</p>\r\n                                        <p>{b.name}</p>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </table>\r\n                </Card>\r\n                {/*Modal Add*/}\r\n                <Modal\r\n                    title=\"ทำรายการนัด\"\r\n                    name=\"Add\"\r\n                    visible={this.state.modalAdd}\r\n                    onCancel={() => this.setState({ modalAdd: false })}\r\n                >\r\n                    {this.state.timeSelect.map(a => (\r\n                        <Card>\r\n                            <p>ผู้ให้บริการ {a.docName}</p>\r\n                            <p>วันที่ {a.date}</p>\r\n                            <p>เวลา {a.timeName}</p>\r\n                        </Card>\r\n                    ))}\r\n                    <Card>\r\n                        <p>ค้นหาผู้ป่วย</p>\r\n                        <Search id={\"hn\"} enterButton=\"hhh\" />\r\n                        <Select>\r\n                            <Option value=\"\">aa</Option>\r\n                        </Select>\r\n                    </Card>\r\n                </Modal>\r\n                {/*Modal Add*/}\r\n\r\n                {/*Modal Edit*/}\r\n                <Modal\r\n                    title=\"แก้ไข\"\r\n                    name=\"Edit\"\r\n                    visible={this.state.modalEdit}\r\n                    onCancel={() => this.setState({ modalEdit: false })}\r\n                >\r\n\r\n                </Modal>\r\n                {/*Modal Edit*/}\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default MassageAdmin"]},"metadata":{},"sourceType":"module"}