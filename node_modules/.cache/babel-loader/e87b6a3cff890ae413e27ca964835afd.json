{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react\\\\samroiyod_next-app\\\\src\\\\admin\\\\Head.jsx\";\nimport React, { Component } from 'react';\nimport { Input, Button, Card, message } from 'antd';\nimport { CookiesProvider, withCookies } from 'react-cookie';\nimport Login from './Login';\n\nclass Head extends Component {\n  constructor() {\n    super();\n\n    this.logOut = () => {\n      const cookies = this.props.cookies;\n      cookies.remove('user');\n      cookies.remove('pass');\n    };\n\n    this.state = {\n      loginStat: false,\n      pageManage: \"1\",\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    const cookies = this.props.cookies; //console.log(cookie)\n\n    let userName = cookies.get('user'),\n        passWord = cookies.get('pass');\n\n    if (userName === undefined || passWord === undefined) {\n      let setLogin = new Promise((resolve, reject) => {\n        resolve(this.setState({\n          loginStat: false\n        }));\n      });\n      setLogin.then(() => {\n        this.props.toMonitor(this.state.loginStat);\n      });\n    } else {\n      fetch(\"http://183.88.219.85:7078/appoint/login.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: userName,\n          pass: passWord\n        })\n      }).then(res => res.json()).then(res => {\n        //console.log(res)\n        let stat = res.map(a => a.stat).toString();\n\n        if (stat === \"1\") {\n          let setLogin = new Promise(resolve => {\n            resolve(this.setState({\n              user: res,\n              loginStat: true\n            }));\n          });\n          setLogin.then(() => {\n            this.props.toMonitor(this.state.loginStat);\n          }); // this.props.propsLogin(this.state.user)\n        } else {\n          message.warning(\"usernameหรือpasswordไม่ถูกต้อง\");\n        }\n      });\n    }\n  }\n\n  componentWillReceiveProps(e) {\n    console.log(e);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\u0E23\\u0E30\\u0E1A\\u0E1A\\u0E19\\u0E31\\u0E14\\u0E2D\\u0E2D\\u0E19\\u0E44\\u0E25\\u0E19\\u0E4C\"), React.createElement(Button, {\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Logout\")));\n  }\n\n}\n\nexport default withCookies(Head);","map":{"version":3,"sources":["I:\\ANYcode\\react\\samroiyod_next-app\\src\\admin\\Head.jsx"],"names":["React","Component","Input","Button","Card","message","CookiesProvider","withCookies","Login","Head","constructor","logOut","cookies","props","remove","state","loginStat","pageManage","user","componentDidMount","userName","get","passWord","undefined","setLogin","Promise","resolve","reject","setState","then","toMonitor","fetch","method","body","JSON","stringify","pass","res","json","stat","map","a","toString","warning","componentWillReceiveProps","e","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Input, Button, Card, message } from 'antd'\r\nimport { CookiesProvider, withCookies } from 'react-cookie'\r\nimport Login from './Login'\r\nclass Head extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loginStat: false,\r\n            pageManage: \"1\",\r\n            user: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { cookies } = this.props\r\n        //console.log(cookie)\r\n        let userName = cookies.get('user'),\r\n            passWord = cookies.get('pass')\r\n\r\n        if (userName === undefined || passWord === undefined) {\r\n            let setLogin = new Promise((resolve, reject) => {\r\n                resolve(\r\n                    this.setState({\r\n                        loginStat: false\r\n                    }))\r\n            })\r\n            setLogin.then(() => {\r\n                this.props.toMonitor(this.state.loginStat)\r\n\r\n            })\r\n        }\r\n        else {\r\n            fetch(\"http://183.88.219.85:7078/appoint/login.php\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    user: userName,\r\n                    pass: passWord\r\n                })\r\n            }).then(res => res.json())\r\n                .then(res => {\r\n                    //console.log(res)\r\n                    let stat = res.map(a => a.stat).toString()\r\n                    if (stat === \"1\") {\r\n                        let setLogin = new Promise((resolve) => {\r\n                            resolve(this.setState({\r\n                                user: res,\r\n                                loginStat: true\r\n                            }))\r\n                        })\r\n                        setLogin.then(() => {\r\n                            this.props.toMonitor(this.state.loginStat)\r\n                        })\r\n\r\n                        // this.props.propsLogin(this.state.user)\r\n                    } else {\r\n                        message.warning(\"usernameหรือpasswordไม่ถูกต้อง\")\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(e) {\r\n        console.log(e)\r\n        \r\n    }\r\n\r\n    logOut = () => {\r\n        const { cookies } = this.props\r\n        cookies.remove('user')\r\n        cookies.remove('pass')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card >\r\n                    <h2>ระบบนัดออนไลน์</h2>\r\n                    <Button onClick={this.logOut}>Logout</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withCookies(Head)"]},"metadata":{},"sourceType":"module"}